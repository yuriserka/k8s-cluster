services:
  pgsql_database:
    image: postgres:16.3
    image_env_vars:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: kafka-worker
    image_port_map: 5433:5432
    env_vars:
      DATABASE_USER: test
      DATABASE_PASSWORD: test
      DATABASE_HOST: localhost
      DATABASE_NAME: kafka-worker
      DATABASE_PORT: 5433
    output_file: ./db-credentials

steps:
  env:
    cmd:
      - "python3 -m venv .venv"

  install:
    cmd:
      - ". .venv/bin/activate && pip install -r requirements.txt"
      - ". .venv/bin/activate && pip install -r requirements_dev.txt"

  lint:
    cmd:
      - ". .venv/bin/activate && python -m flake8"

  test:
    cmd:
      - "export $(cat ./db-credentials) && . .venv/bin/activate && python -Wa manage.py test"

  dev-get-database-credentials:
    kind: credentials
    path: database:kafka-worker:dev
    output_file: ./db-credentials

  dev-migrate:
    kind: database_migration
    env: dev
    cmd:
      - "export $(cat ./db-credentials) && . .venv/bin/activate && python manage.py showmigrations"
      - "export $(cat ./db-credentials) && . .venv/bin/activate && python manage.py migrate"

  dev-publish-api:
    kind: publish
    repo: kafka-worker-api
    dockerfile: Dockerfile
    env: dev

  dev-publish-kafka-worker:
    kind: publish
    repo: kafka-worker-example-topic-consumer
    dockerfile: Dockerfile
    env: dev

  dev-deploy-api:
    kind: install
    repo: kafka-worker
    application: kafka-worker-api
    params_file: api.yaml
    env: dev

  dev-deploy-kafka-worker:
    kind: install
    repo: kafka-worker
    application: kafka-worker-example-topic-consumer
    params_file: example-topic-consumer.yaml
    env: dev
