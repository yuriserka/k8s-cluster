services:
  pgsql_database:
    image: postgres:16.3
    image_env_vars:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: kafka-producer
    image_port_map: 5433:5432
    env_vars:
      DATABASE_USER: test
      DATABASE_PASSWORD: test
      DATABASE_HOST: localhost
      DATABASE_NAME: kafka-producer
      DATABASE_PORT: 5433
    output_file: ./db-credentials

steps:
  install:
    cmd:
      - "gradle clean assemble -x bootJar"

  lint:
    cmd:
      - "gradle check -x test"

  test:
    cmd:
      - "export $(cat ./db-credentials) && gradle test -x bootJar"

  build:
    cmd:
      - "gradle bootJar"
  
  dev-get-database-credentials:
    kind: credentials
    path: database:kafka-producer:dev
    output_file: ./db-credentials

  dev-migrate:
    kind: database_migration
    env: dev
    cmd:
      - "export $(cat ./db-credentials) && gradle :app:core:flywayMigrate -Dflyway.configFiles=flyway.conf"

  dev-publish-api:
    kind: publish
    repo: kafka-producer-api
    dockerfile: app/containers/api/Dockerfile
    env: dev

  dev-publish-scheduler:
    kind: publish
    repo: kafka-producer-scheduler
    dockerfile: app/containers/scheduler/Dockerfile
    env: dev

  dev-deploy-api:
    kind: install
    repo: kafka-producer
    application: kafka-producer-api
    params_file: api.yaml
    env: dev

  dev-deploy-scheduler:
    kind: install
    repo: kafka-producer
    application: kafka-producer-scheduler
    params_file: scheduler.yaml
    env: dev
