FROM gradle:8.9-jdk17-alpine AS cache
RUN mkdir -p /home/gradle/cache_home
ENV GRADLE_USER_HOME=/home/gradle/cache_home
COPY settings.gradle gradle.properties /home/gradle/java-code/
COPY app/build.gradle /home/gradle/java-code/app/
COPY app/containers/build.gradle /home/gradle/java-code/app/containers/
COPY app/containers/scheduler/build.gradle /home/gradle/java-code/app/containers/scheduler/
WORKDIR /home/gradle/java-code
RUN gradle :app:containers:scheduler:clean :app:containers:scheduler:build -x bootJar --no-daemon

FROM gradle:8.9-jdk17-alpine AS builder
COPY --from=cache /home/gradle/cache_home /home/gradle/.gradle
COPY . /usr/src/java-code/
WORKDIR /usr/src/java-code
RUN gradle :app:containers:scheduler:bootJar --no-daemon

FROM eclipse-temurin:17-jdk-alpine
WORKDIR /usr/src/java-app
COPY --from=builder /usr/src/java-code/app/containers/scheduler/build/libs/*.jar ./scheduler.jar
ADD https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v2.15.0/opentelemetry-javaagent.jar /app/opentelemetry-javaagent.jar

EXPOSE 8080

ENV SPRING_PROFILE=local
ENV OTEL_SERVICE_NAME=kafka-producer-scheduler
ENV OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
ENV OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
ENV OTEL_JAVAAGENT_ENABLED=true

CMD ["java", "-javaagent:/app/opentelemetry-javaagent.jar", "-jar", "-Dspring.profiles.active=${SPRING_PROFILE}", "scheduler.jar"]
